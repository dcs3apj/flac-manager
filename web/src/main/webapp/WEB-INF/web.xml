<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
      http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	version="2.4">

	<display-name>Music Server</display-name>
	
	<filter>
		<filter-name>struts</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.FilterDispatcher
		</filter-class>
	</filter>

 	<filter>
		<filter-name>sitemesh</filter-name>
		<filter-class>
			com.opensymphony.module.sitemesh.filter.PageFilter
		</filter-class>
	</filter>

	<filter>
		<filter-name>struts-cleanup</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ActionContextCleanUp
		</filter-class>
	</filter>
 
 	<filter>
		<filter-name>hibernate-music</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
		</filter-class>
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>musicSessionFactory</param-value>
		</init-param>
	</filter>

 	<filter>
		<filter-name>hibernate-flac</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
		</filter-class>
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>flacSessionFactory</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>covers</filter-name>
		<filter-class>org.springmodules.jcr.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>coversSessionFactory</param-value>
		</init-param>
	</filter>
	
	<filter>
		<filter-name>encoded</filter-name>
		<filter-class>org.springmodules.jcr.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>encodedSessionFactory</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>hibernate-music</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>hibernate-flac</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>struts-cleanup</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
 
	<filter-mapping>
		<filter-name>sitemesh</filter-name>
		<url-pattern>/html/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>struts</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>struts</filter-name>
		<url-pattern>/struts/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>covers</filter-name>
		<servlet-name>covers</servlet-name>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>encoded</filter-name>
		<servlet-name>encoded</servlet-name>
	</filter-mapping>
	
	<listener>
		<listener-class>
			org.springframework.web.context.request.RequestContextListener
		</listener-class>
	</listener>

	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:applicationContext-music-core.xml
			classpath:applicationContext-music-core-music-hibernate.xml
			classpath:applicationContext-music-core-flac-hibernate.xml
			classpath:applicationContext-music-encoder.xml
			classpath:applicationContext-music-repository-server.xml
			classpath:applicationContext-music-album-covers.xml
			classpath:applicationContext-music-web.xml
		</param-value>
	</context-param>

	<servlet>
		<servlet-name>jspSupportServlet</servlet-name>
		<servlet-class>
			org.apache.struts2.views.JspSupportServlet
		</servlet-class>
		<load-on-startup>10</load-on-startup>
	</servlet>

    <servlet>
        <display-name>Album Covers DAV Server</display-name>
        <servlet-name>covers</servlet-name>
        <servlet-class>
        	uk.co.unclealex.music.web.webdav.SpringWebdavServlet
        </servlet-class>
        <init-param>
        	<param-name>repository-manager</param-name>
        	<param-value>coversRepositoryManager</param-value>
        </init-param>
        <init-param>
        	<param-name>missing-auth-mapping</param-name>
        	<param-value>x:x</param-value>
        </init-param>
        <init-param>
        	<param-name>resource-config</param-name>
        	<param-value>/WEB-INF/config.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- Webdav. -->
    <servlet>
        <display-name>Encoded Files DAV Server</display-name>
        <servlet-name>encoded</servlet-name>
        <servlet-class>
        	uk.co.unclealex.music.web.webdav.SpringWebdavServlet
        </servlet-class>
        <init-param>
        	<param-name>repository-manager</param-name>
        	<param-value>encodedRepositoryManager</param-value>
        </init-param>
        <init-param>
        	<param-name>missing-auth-mapping</param-name>
        	<param-value>x:x</param-value>
        </init-param>
        <init-param>
        	<param-name>resource-config</param-name>
        	<param-value>/WEB-INF/config.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
       
		<servlet>
			<servlet-name>commands</servlet-name>
			<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
			<load-on-startup>1</load-on-startup>
		</servlet>
		
		<servlet>
			<servlet-name>thumbnail</servlet-name>
			<servlet-class>uk.co.unclealex.music.web.servlet.PictureServlet</servlet-class>
			<init-param>
				<param-name>dataExtractor</param-name>
				<param-value>albumThumbnailDataExtractor</param-value>
			</init-param>
		</servlet>
	
		<servlet>
			<servlet-name>cover</servlet-name>
			<servlet-class>uk.co.unclealex.music.web.servlet.PictureServlet</servlet-class>
			<init-param>
				<param-name>dataExtractor</param-name>
				<param-value>albumCoverDataExtractor</param-value>
			</init-param>
		</servlet>

		<servlet-mapping>
			<servlet-name>commands</servlet-name>
			<url-pattern>/commands/*</url-pattern>
		</servlet-mapping>

		<servlet-mapping>
			<servlet-name>cover</servlet-name>
			<url-pattern>/cover/*</url-pattern>
		</servlet-mapping>

		<servlet-mapping>
			<servlet-name>thumbnail</servlet-name>
			<url-pattern>/thumbnail/*</url-pattern>
		</servlet-mapping>
		
		<servlet-mapping>
			<servlet-name>encoded</servlet-name>
			<url-pattern>/encoded/*</url-pattern>
		</servlet-mapping>

		<servlet-mapping>
			<servlet-name>encoded</servlet-name>
			<url-pattern>/encoded</url-pattern>
		</servlet-mapping>

		<servlet-mapping>
			<servlet-name>covers</servlet-name>
			<url-pattern>/covers/*</url-pattern>
		</servlet-mapping>

		<servlet-mapping>
			<servlet-name>covers</servlet-name>
			<url-pattern>/covers</url-pattern>
		</servlet-mapping>

	<resource-ref>
		<description>Encoded Music Database</description>
		<res-ref-name>jdbc/music</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>

	<resource-ref>
		<description>Slimserver Database</description>
		<res-ref-name>jdbc/slimserver</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>

	<error-page>
		<error-code>500</error-code>
		<location>/error.jsp</location>
	</error-page>
</web-app>

